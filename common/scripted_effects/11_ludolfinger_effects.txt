# invader appears if k_east_francia.holder doesn't exist, before story
spawn_otto_character_effect = {
	title:c_frankfurt.title_province = {
		save_scope_as = $INVADER_DYNN$_spawn_location
	}

	if = { # doesn't exist yet
		limit = { NOT = { exists = title:k_east_francia.holder } }
		# grandfather
		character:7908 = { save_scope_as = otto_grandfather } # [8859, 7908]
		create_character = {
			template = heinrich_ludolfinger_character_template
			dynasty = inherit
			father = scope:otto_grandfather
			location = scope:$INVADER_DYNN$_spawn_location
			save_scope_as = heinrich_ludolfinger
		}
		create_character = {
			template = otto_ludolfinger_character_template
			dynasty = inherit
			father = scope:heinrich_ludolfinger
			location = scope:$INVADER_DYNN$_spawn_location
			save_scope_as = $INVADER_NAME$
		}
	}
	else = { # suitable replacement exists
		title:k_east_francia.holder = { save_scope_as = $INVADER_NAME$ }
	}
	
	scope:$INVADER_NAME$ = {
		add_gold = 2500
		add_prestige = 7500
		add_piety = 500

		dynasty = {
			add_dynasty_prestige_level = 1
			add_dynasty_prestige = 750
			add_dynasty_perk = hth_warfare_legacy_1
		}
	}

	every_player = {
		trigger_event = $INVADER_DYNN$_invasion.1001 # Notification: Start of invasion
	}
}

ludolfinger_maintenance_effect = {
	apply_invader_modifiers_effect = {
		INVADER_DYNN = $INVADER_DYNN$
	}
	give_invader_land_effect = {
		INVADER_DYNN = $INVADER_DYNN$
		INVADER_CHAR = $INVADER_CHAR$
		STARTING_TIER = $STARTING_TIER$
	}
	spawn_$INVADER_DYNN$_family_effect = {
		INVADER_CHAR = $INVADER_CHAR$
	}
	spawn_invader_servants_effect = {
		INVADER_CHAR = $INVADER_CHAR$
	}
	form_the_$INVADER_DYNN$_title_effect = {
		INVADER_DYNN = $INVADER_DYNN$
		INVADER_CHAR = $INVADER_CHAR$
		INVADER_TITLE = $INVADER_TITLE$
		LANDLESS_YES_NO = $LANDLESS_YES_NO$
		#INVADER_TITLE_TIER = $INVADER_TITLE_TIER$
	}
}

### populating the life of the invader character
spawn_ludolfinger_family_effect = {
	if = {
		limit = { NOT = { exists = title:k_east_francia.holder } }
		# create family
		$INVADER_CHAR$ = { add_prestige = 1 } #todo - just here so the unused argument doesn't break everything
	}
}

# Form and give titles
form_the_ludolfinger_title_effect = {
	if = { # create
		limit = { title:k_east_francia = { is_title_created = no } }
		# Create the title
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		$INVADER_TITLE$ = {
			change_title_holder = {
				holder = $INVADER_CHAR$
				change = scope:title_change
			}
			set_landless_title = $LANDLESS_YES_NO$
		}
		becomes_independent = { change = scope:title_change }
		resolve_title_and_vassal_change = scope:title_change
		
		assert_if = {
			limit = { NOT = { exists = $INVADER_TITLE$ } }
			text = "ludolfinger Kingdom title was not created!"
		}
	}
	else = {
		debug_log = "ludolfinger story started using an existing character"
	}

	set_primary_title_to = $INVADER_TITLE$

	# every_held_title = {
	# 	limit = {
	# 		tier > tier_$INVADER_TITLE_TIER$
	# 		NOT = { this = $INVADER_TITLE$ }
	# 	}
	# 	$INVADER_CHAR$ = {
	# 		destroy_title = prev
	# 	}
	# }

	change_government = feudal_government

	trigger_event = { # delayed to prevent error.log entry
		id = $INVADER_DYNN$_invasion.0100 # spawn troops
		days = 1
	}
}

# Make sure invader has troops
spawn_ludolfinger_troops_effect = {
	spawn_ludolfinger_army_effect = yes
	spawn_ludolfinger_army_effect = yes
	spawn_ludolfinger_army_effect = yes
}
spawn_ludolfinger_army_effect = {
	spawn_army = {
		name = ludolfinger_event_troops
		location = capital_province
		uses_supply = no
		inheritable = no
		
		levies = 500
		men_at_arms = {
			type = armored_footmen
			stacks = 5
		}
		men_at_arms = {
			type = pikemen_unit
			stacks = 7
		}
		men_at_arms = {
			type = bowmen
			stacks = 3
		}
		# siege
		men_at_arms = {
			type = mangonel
			stacks = 5
		}
	}
}

hi_restore_hre_decision_effect = {
	### root scope = decision taker or story cycle owner

	save_scope_as = hre_restorer

	# form the title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_hre = {
		change_title_holder = {
			holder = scope:hre_restorer
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	every_held_title = {
		limit = {
			tier >= tier_kingdom
			NOT = { this = title:e_hre }
		}
		scope:hre_restorer = {
			destroy_title = prev
		}
	}

	### succession laws
	title:e_hre = {
		add_title_law = princely_elective_succession_law
		if = {	# add Salic law
			limit = {
				scope:hre_restorer = {
					OR = {
						has_realm_law = male_preference_law
						has_realm_law = male_only_law
					}
				}
			}
			add_title_law = male_only_law
		}
		if = {	# ignore Salic law
			limit = {
				scope:hre_restorer = { has_realm_law = equal_law }
			}
			add_title_law = equal_law
		}
		if = {	# invert Salic law
			limit = {
				scope:hre_restorer = {
					OR = {
						has_realm_law = female_preference_law
						has_realm_law = female_only_law
					}
				}
			}
			add_title_law = female_only_law
		}
		custom_tooltip = hre_elector_list_creation_tt
	}

	### de jure changes
	# HRE core
	if = { # merge e_germany into e_hre
		limit = { NOT = { exists = title:e_germany.holder } }
		hidden_effect = {
			title:e_germany = {
				every_in_de_jure_hierarchy = {
					limit = { tier = tier_kingdom }
					set_de_jure_liege_title = title:e_hre
				}
			}
		}
	}
	# should be part of e_germany, but de jure changes or other mods might have shifted the conquered lands out of that empire, so let's shift them in manually
	title:k_east_francia = { add_to_temporary_list = hi_e_hre_list }
	title:k_bavaria = { add_to_temporary_list = hi_e_hre_list }
	title:k_lotharingia = { add_to_temporary_list = hi_e_hre_list }
	title:k_frisia = { add_to_temporary_list = hi_e_hre_list }
	title:k_italy = { add_to_temporary_list = hi_e_hre_list }
	# burgundy
	if = {
		limit = {
			OR = {
				has_title = title:k_burgundy
				completely_controls = title:k_burgundy
			}
		}
		title:k_burgundy = { add_to_temporary_list = hi_e_hre_list }
	}
	# bohemia
	if = {
		limit = {
			OR = {
				has_title = title:k_bohemia
				completely_controls = title:k_bohemia
			}
		}
		title:k_bohemia = { add_to_temporary_list = hi_e_hre_list }
	}
	# sorbia
	if = {
		limit = {
			OR = {
				has_title = title:k_sorbia
				completely_controls = title:k_sorbia
			}
		}
		title:k_sorbia = { add_to_temporary_list = hi_e_hre_list }
	}
	# pomerania
	if = {
		limit = {
			OR = {
				has_title = title:k_pomerania
				completely_controls = title:k_pomerania
			}
		}
		title:k_pomerania = { add_to_temporary_list = hi_e_hre_list }
	}
	every_in_list = {
		list = hi_e_hre_list
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_kingdom
				NOT = { target_is_de_jure_liege_or_above = title:e_hre }
			}
			set_de_jure_liege_title = title:e_hre
		}
	}
	# give e_italy some de jure land
	title:k_venice = { add_to_temporary_list = hi_e_italy_list }
	title:k_sicily = { add_to_temporary_list = hi_e_italy_list }
	title:k_naples = { add_to_temporary_list = hi_e_italy_list }
	title:k_trinacria = { add_to_temporary_list = hi_e_italy_list }
	every_in_list = {
		list = hi_e_italy_list
		every_in_de_jure_hierarchy = {
			limit = { # only kingdoms that are de jure part of its original liege - to prevent erasing de jure shift
				tier = tier_kingdom
				target_is_de_jure_liege_or_above = title:e_byzantium
			}
			set_de_jure_liege_title = title:k_romagna.de_jure_liege
		}
	}

	### name change
	title:k_burgundy = { set_title_name = hi_k_arles }
	#title:k_lotharingia = { set_title_name = hi_k_lorraine }
}

hi_expand_hre_decision_effect = {
	# k_burgundy
	if = {
		limit = {
			NOT = { title:k_burgundy.de_jure_liege = title:e_hre }
			completely_controls = title:k_burgundy
		}
		title:k_burgundy = { set_de_jure_liege_title = title:e_hre }
	}
	# k_italy
	if = {
		limit = {
			NOT = { title:k_italy.de_jure_liege = title:e_hre }
			completely_controls = title:k_italy
		}
		title:k_italy = { set_de_jure_liege_title = title:e_hre }
	}
	# k_pomerania
	if = {
		limit = {
			NOT = { title:k_pomerania.de_jure_liege = title:e_hre }
			completely_controls = title:k_pomerania
		}
		title:k_pomerania = { set_de_jure_liege_title = title:e_hre }
	}
	# k_bohemia
	if = {
		limit = {
			NOT = { title:k_bohemia.de_jure_liege = title:e_hre }
			completely_controls = title:k_bohemia
		}
		title:k_bohemia = { set_de_jure_liege_title = title:e_hre }
	}
	# k_sorbia
	if = {
		limit = {
			NOT = { title:k_sorbia.de_jure_liege = title:e_hre }
			completely_controls = title:k_sorbia
		}
		title:k_sorbia = { set_de_jure_liege_title = title:e_hre }
	}
}