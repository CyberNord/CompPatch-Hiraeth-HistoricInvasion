# invader appears, before story
spawn_seljuk_character_effect = {
	title:c_gurgan.title_province = {
		save_scope_as = $INVADER_DYNN$_spawn_location
	}

	### create distant, dead ancestors
	character:1000230102 = { save_scope_as = uechoq_inaltiginid }
	create_character = {
		template = tengiz_inaltiginid_character_template
		father = scope:uechoq_inaltiginid
		dynasty = inherit
		location = scope:$INVADER_DYNN$_spawn_location
		save_scope_as = tengiz_inaltiginid
	}
	create_character = {
		template = qiniq_qiniq_character_template
		father = scope:tengiz_inaltiginid
		dynasty = inherit
		location = scope:$INVADER_DYNN$_spawn_location
		save_scope_as = qiniq_qiniq
	}
	scope:qiniq_qiniq = {
		house = {
			set_house_name = hi_dynn_oghuz_house_qiniq
			generate_coa = yes
		}
	}
	create_character = {
		template = duqaq_qiniq_character_template
		father = scope:qiniq_qiniq
		dynasty = inherit
		location = scope:$INVADER_DYNN$_spawn_location
		save_scope_as = duqaq_qiniq
	}
	create_character = {
		template = seljuk_seljuk_character_template
		father = scope:duqaq_qiniq
		dynasty = inherit
		location = scope:$INVADER_DYNN$_spawn_location
		save_scope_as = seljuk_seljuk
	}
	scope:seljuk_seljuk = {
		house = {
			set_house_name = hi_dynn_oghuz_house_seljuk
			set_coa = title:e_seljuk
		}
	}

	### create living relatives
	# father
	create_character = { # father is created first so we can have him appear as Tughril's father
		template = mikail_seljuk_character_template
		father = scope:seljuk_seljuk
		dynasty = inherit
		#employer = scope:$INVADER_NAME$
		location = scope:$INVADER_DYNN$_spawn_location
		save_scope_as = mikail_seljuk
	}
	# mother
	create_character = {
		age = { 33 43 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		location = scope:$INVADER_DYNN$_spawn_location
		faith = scope:mikail_seljuk.faith
		culture = scope:mikail_seljuk.culture
		save_scope_as = mikail_seljuk_spouse
		after_creation = {
			marry = scope:mikail_seljuk
		}
	}
	# INVADER
	create_character = {
		template = tughril_seljuk_character_template
		mother = scope:mikail_seljuk_spouse
		father = scope:mikail_seljuk
		dynasty = inherit
		location = scope:$INVADER_DYNN$_spawn_location
		save_scope_as = $INVADER_NAME$
	}
	scope:$INVADER_NAME$ = {
		add_gold = 4500
		add_prestige = 5000
		add_piety = 400
		
		dynasty = {
			add_dynasty_prestige_level = 3
			add_dynasty_prestige = 4000
			add_dynasty_perk = warfare_legacy_1
			add_dynasty_perk = warfare_legacy_2
			add_dynasty_perk = warfare_legacy_3
		}
	}

	every_player = {
		trigger_event = $INVADER_DYNN$_invasion.1001 # Notification: Start of invasion
	}
}

seljuk_maintenance_effect = {
	apply_invader_modifiers_effect = {
		INVADER_DYNN = $INVADER_DYNN$
	}
	give_invader_land_effect = {
		INVADER_DYNN = $INVADER_DYNN$
		INVADER_CHAR = $INVADER_CHAR$
		STARTING_TIER = $STARTING_TIER$
	}
	spawn_$INVADER_DYNN$_family_effect = {
		INVADER_CHAR = $INVADER_CHAR$
	}
	spawn_invader_servants_effect = {
		INVADER_CHAR = $INVADER_CHAR$
	}
	form_the_invader_title_effect = {
		INVADER_DYNN = $INVADER_DYNN$
		INVADER_CHAR = $INVADER_CHAR$
		INVADER_TITLE = $INVADER_TITLE$
		LANDLESS_YES_NO = $LANDLESS_YES_NO$
		INVADER_TITLE_TIER = $INVADER_TITLE_TIER$
	}
}

### populating the life of the invader character
spawn_seljuk_family_effect = {
	# Altun Jan, Tughril's spouse (son = Anushirwan with Shah Malik Yabghu)
	create_character = {
		template = altun_jan_character_template
		employer = $INVADER_CHAR$
		save_scope_as = altun_jan
	}
	scope:altun_jan = {
		marry = $INVADER_CHAR$
		disease_immunity_short_effect = yes
	}

	# Musa (uncle)
	create_character = {
		template = musa_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father
		save_scope_as = musa_seljuk
	}

	# Yunus (uncle)
	create_character = {
		template = yunus_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father
		save_scope_as = yunus_seljuk
	}
	create_character = {
		template = rasultegin_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:yunus_seljuk
		save_scope_as = qutalmish_seljuk
	}

	# Arslan (uncle)
	create_character = {
		template = arslan_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father
		save_scope_as = arslan_seljuk
	}
	create_character = {
		template = qutalmish_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:arslan_seljuk
		save_scope_as = qutalmish_seljuk
	}
	create_character = { # frist sultan of Rûm
		template = suleiman_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:qutalmish_seljuk
	}

	# Mikail (father)
	# created further up so he can be added as a father

	# Chagri-Beg (brother)
	create_character = {
		template = chagri-beg_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = $INVADER_CHAR$.mother
		father = $INVADER_CHAR$.father
		save_scope_as = chagri-beg_seljuk
	}
	create_character = {
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = chagri-beg_seljuk_spouse
		after_creation = {
			marry = scope:chagri-beg_seljuk
		}
	}

	# Qawurd
	create_character = {
		template = qawurd_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:chagri-beg_seljuk_spouse
		father = scope:chagri-beg_seljuk
	}

	# Uthman
	create_character = {
		template = uthman_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:chagri-beg_seljuk_spouse
		father = scope:chagri-beg_seljuk
	}

	# Suleyman; NOT RÛM
	create_character = {
		template = suleyman_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:chagri-beg_seljuk_spouse
		father = scope:chagri-beg_seljuk
	}
	
	# Ilyas
	create_character = {
		template = ilyas_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:chagri-beg_seljuk_spouse
		father = scope:chagri-beg_seljuk
	}

	# Yaquti
	create_character = {
		template = yaquti_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:chagri-beg_seljuk_spouse
		father = scope:chagri-beg_seljuk
	}

	# Alp Arslan
	create_character = {
		template = alp_arslan_seljuk_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:chagri-beg_seljuk_spouse
		father = scope:chagri-beg_seljuk
	}
}

# Make sure invader has troops
spawn_seljuk_troops_effect = {
	spawn_seljuk_army_effect = yes
	spawn_seljuk_army_effect = yes
	spawn_seljuk_army_effect = yes
	spawn_seljuk_army_effect = yes
	spawn_seljuk_army_effect = yes
}
spawn_seljuk_army_effect = {
	spawn_army = {
		name = seljuk_event_troops
		location = capital_province
		uses_supply = no
		inheritable = no
		
		levies = 730
		men_at_arms = {
			type = horse_archers
			stacks = 12
		}
		men_at_arms = {
			type = horse_archers
			stacks = 12
		}
		men_at_arms = {
			type = light_horsemen
			stacks = 10
		}
		men_at_arms = {
			type = light_horsemen
			stacks = 10
		}
		men_at_arms = {
			type = light_footmen
			stacks = 5
		}
		men_at_arms = {
			type = bowmen
			stacks = 3
		}
		# siege
		men_at_arms = {
			type = mangonel
			stacks = 7
		}	
	}
}

seljuk_offer_caliph_subjugation_effect = {
	set_global_variable = {
		name = seljuk_offered_caliph_subjugation
		value = yes
	}
	### does a sunni caliph exist? if not, choose or generate a character and make them caliph
	if = { # caliph exists
		limit = { title:d_sunni = { is_title_created = yes } }
		historicinvasions_migration_effect_destroy_other_titles = {
			MIGRATION_LEADER = title:d_sunni.holder
			MIGRATION_TARGET = title:d_sunni # is not destroyed
			MIGRATION_TARGET_TIER = tier_duchy # destroy all higher titles
		}
		historicinvasions_migration_effect_acquire_new_counties = {
			MIGRATION_LEADER = title:d_sunni.holder
			MIGRATION_DYNN = abbasid # used for naming variables
			MIGRATION_REGION = special_seljuk_conquest_region_mesopotamia # acquire ai-controlled counties
			MIGRATION_COUNTY_AMOUNT = 7
		}
		historicinvasions_migration_effect_grant_independence = {
			MIGRATION_LEADER = title:d_sunni.holder
			MIGRATION_REGION = special_seljuk_conquest_region_mesopotamia # grant independence if not within here
			MIGRATION_DYNN = abbasid # just to set a global variable with that dynasty name
		}
	}
	else = { # make a new caliph
		character:34001 = { save_scope_as = abbasid_dynasty_member } # id 3160, hist-id 34001
		scope:abbasid_dynasty_member = {
			dynasty = {
				random_dynasty_member = {
					limit = {
						age > 18
						age < 42
						has_trait = sayyid
						is_ruler = no
						is_healthy = yes
						trigger_if = {
							limit = { has_game_rule = inversed_gender_equality }
							is_female = yes
						}
						trigger_else_if = {
							limit = { has_game_rule = full_gender_equality }
							# Then we don't care about the gender so skip the trigger
						}
						trigger_else = { is_male = yes }
					}
					save_scope_as = new_sunni_caliph
				}
			}
		}
		if = {
			limit = { exists = scope:new_sunni_caliph }
			# do nothing
		}
		else = {
			# fake father
			character:34001 = { save_scope_as = abbasid_dynasty_member } # id 3160, hist-id 34001
			scope:abbasid_dynasty_member = {
				dynasty = {
					random_dynasty_member = {
						limit = { is_male = yes }
						save_scope_as = scripted_father
					}
				}
			}
			# create character
			create_character = {
				template = new_warrior_character
				gender_female_chance = 0
				employer = title:e_seljuk.holder

				dynasty = inherit
				father = scope:scripted_father
				
				faith = faith:ashari
				culture = title:c_baghdad.culture

				save_scope_as = new_sunni_caliph

				after_creation = {
					if = {
						limit = { has_trait = drunkard }
						remove_trait = drunkard
					}
					add_trait = sayyid
				}
			}
		}
		historicinvasions_migration_effect_acquire_new_counties = {
			MIGRATION_LEADER = scope:new_sunni_caliph
			MIGRATION_DYNN = abbasid # used for naming variables
			MIGRATION_REGION = special_seljuk_conquest_region_mesopotamia # acquire ai-controlled counties
			MIGRATION_COUNTY_AMOUNT = 7
		}
		historicinvasions_migration_effect_acquire_title = {
			MIGRATION_LEADER = scope:new_sunni_caliph
			MIGRATION_TARGET = title:d_sunni # acquire title
		}
	}
	if = { # also always try to assign baghdad
		limit = { 
			exists = title:d_sunni.holder
			title:c_baghdad.holder = { is_ai = yes }
			NOT = { title:c_baghdad.holder = title:d_sunni.holder }
		}
		create_title_and_vassal_change = {
			type = usurped
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:c_baghdad = {
			change_title_holder = {
				holder = title:d_sunni.holder
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change
	}

	# make vassal of e_seljuk, if a holder exists
	if = {
		limit = { exists = title:e_seljuk.holder }
		title:d_sunni.holder = {
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			change_liege = {
				liege = title:e_seljuk.holder
				change = scope:title_change
			}
			resolve_title_and_vassal_change = scope:title_change
		}
	}

	# notify players
	every_player = {
		limit = {
			NOR = {
				this = title:e_seljuk.holder
				this = title:d_sunni.holder
			}
		}
		trigger_event = {
			id = seljuk_invasion.1014
			days = 7
		}
	}
}

seljuk_rum_invasion_effect = {
	# pick house member for invasion
	title:e_seljuk.holder = {
		house = {
			random_house_member = {
				limit = { # thanks Tobbzn (Way of Kings)!
					age > 18
					age < 42
					is_ruler = no
					is_healthy = yes
					trigger_if = {
						limit = { has_game_rule = inversed_gender_equality }
						is_female = yes
					}
					trigger_else_if = {
						limit = { has_game_rule = full_gender_equality }
						# Then we don't care about the gender so skip the trigger
					}
					trigger_else = { is_male = yes }
				}
				save_scope_as = first_rum_ruler
			}
		}
	}
	if = {
		limit = { exists = scope:first_rum_ruler }
		scope:first_rum_ruler = { set_character_faith_with_conversion = faith:maturidi }
	}
	else = {
		# fake father
		title:e_seljuk.holder = {
			house = { # fantasy father
				random_house_member = {
					limit = { is_male = yes }
					save_scope_as = scripted_father
				}
			}
		}
		# create the ruler
		create_character = {
			age = { 35 45 }
			template = new_warrior_character
			dynasty = inherit
			father = scope:scripted_father
			gender = male
			employer = title:e_seljuk.holder

			faith = faith:maturidi
			culture = culture:turkish # oghuz

			save_scope_as = first_rum_ruler
			after_creation = {
				disease_immunity_long_effect = yes
				add_gold = 500
				add_prestige = 1250
				add_piety = 150
				add_dread = 25
				if = {
					limit = { has_trait = drunkard }
					remove_trait = drunkard
				}
			}
		}
		# create spouse
		create_character = {
			age = { 35 45 }
			template = hi_random_spouse_character_template
			#dynasty_house = house:house_inaltiginid
			dynasty = generate
			gender = female
			employer = title:e_seljuk.holder
			faith = faith:tengri_pagan
			culture = scope:first_rum_ruler.culture
			save_scope_as = first_rum_ruler_spouse
			after_creation = {
				disease_immunity_long_effect = yes
				marry = scope:first_rum_ruler
			}
		}
		# create childrem
		create_character = {
			template = hi_random_child_character_template
			dynasty = inherit
			employer = title:e_seljuk.holder
			mother = scope:first_rum_ruler_spouse
			father = scope:first_rum_ruler
			faith = scope:first_rum_ruler.faith
			culture = scope:first_rum_ruler.culture
			after_creation = {
				disease_immunity_long_effect = yes
			}
		}
		create_character = {
			template = hi_random_child_character_template
			dynasty = inherit
			employer = title:e_seljuk.holder
			mother = scope:first_rum_ruler_spouse
			father = scope:first_rum_ruler
			faith = scope:first_rum_ruler.faith
			culture = scope:first_rum_ruler.culture
			after_creation = {
				disease_immunity_long_effect = yes
			}
		}
		create_character = {
			template = hi_random_child_character_template
			dynasty = inherit
			employer = title:e_seljuk.holder
			mother = scope:first_rum_ruler_spouse
			father = scope:first_rum_ruler
			faith = scope:first_rum_ruler.faith
			culture = scope:first_rum_ruler.culture
			after_creation = {
				disease_immunity_long_effect = yes
			}
		}
		create_character = {
			template = hi_random_child_character_template
			dynasty = inherit
			employer = title:e_seljuk.holder
			mother = scope:first_rum_ruler_spouse
			father = scope:first_rum_ruler
			faith = scope:first_rum_ruler.faith
			culture = scope:first_rum_ruler.culture
			after_creation = {
				disease_immunity_long_effect = yes
			}
		}
	}
	# create and hand out temporary title
	create_dynamic_title = {
		tier = kingdom
		name = seljuk_rum_invasion_title
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change_one
	}
	scope:new_title = {
		change_title_holder = {
			holder = scope:first_rum_ruler
			change = scope:change_one
		}
		set_capital_county = title:c_mayyafariqin
		set_landless_title = yes
		set_delete_on_destroy = yes
		set_no_automatic_claims = yes
		set_can_be_named_after_dynasty = yes
		set_destroy_on_gain_same_tier = yes
		set_destroy_on_succession = yes

		save_scope_as = seljuk_rum_invasion_title
	}
	resolve_title_and_vassal_change = scope:change_one
	scope:new_title = {
		set_coa = title:k_rum
	}

	scope:first_rum_ruler = {
		add_character_flag = is_first_rum_ruler
		add_character_modifier = {
			modifier = historicinvasions_plot_armor
			years = 10
		}
		if = {
			limit = { has_fp1_dlc_trigger = yes }
			add_character_modifier = {
				modifier = fp1_reprieve_from_sa_modifier
				years = 10
			}
		}

		add_gold = 750
		add_prestige = 1250
		add_piety = 250
		add_dread = 25
		add_trait = organizer
		add_perk = stalwart_leader_perk
		
		# troops spawn
		trigger_event = { # delayed to prevent error.log entry
			id = seljuk_invasion.0101
			days = 1
		}
		
		# start invasion
		unlanded_war_target_evaluation_and_declaration_effect = {
			INVADER_DYNN = seljuk
			INVADER_REGION = 7
			EVERY_RANDOM = every # declare on just one ruler / title (random) or on a large area (every)?
			INVADER_TARGET_TITLE_TIER = duchy # currently only to choose target lieges
			#INVADER_TITLE_TARGETS = "target_title = title:d_chaldia target_title = title:d_armeniac target_title = title:d_paphlagonia target_title = title:d_sebasteia target_title = title:d_cilicia target_title = title:d_charsianon target_title = title:d_cappadocia target_title = title:d_anatolia target_title = title:d_cibyrrhaeot target_title = title:d_bucellaria target_title = title:d_optimatoi target_title = title:d_opsikion target_title = title:d_thracesia target_title = title:d_ephese"
			#INVADER_TITLE_TARGETS = "target_title = title:d_chaldia.de_jure_liege target_title = title:d_armeniac.de_jure_liege target_title = title:d_paphlagonia.de_jure_liege target_title = title:d_sebasteia.de_jure_liege target_title = title:d_cilicia.de_jure_liege target_title = title:d_charsianon.de_jure_liege target_title = title:d_cappadocia.de_jure_liege target_title = title:d_anatolia.de_jure_liege target_title = title:d_cibyrrhaeot.de_jure_liege target_title = title:d_bucellaria.de_jure_liege target_title = title:d_optimatoi.de_jure_liege target_title = title:d_opsikion.de_jure_liege target_title = title:d_thracesia.de_jure_liege target_title = title:d_ephese.de_jure_liege"
			INVADER_TITLE_TARGETS = "target_title = title:d_chaldia.de_jure_liege target_title = title:d_armeniac.de_jure_liege target_title = title:d_sebasteia.de_jure_liege target_title = title:d_cilicia.de_jure_liege target_title = title:d_charsianon.de_jure_liege target_title = title:d_cappadocia.de_jure_liege target_title = title:d_anatolia.de_jure_liege target_title = title:d_cibyrrhaeot.de_jure_liege" # no nikaea
			INVADER_LIEGE_RESTRICTIONS = "NOR = { this = title:e_seljuk.holder this = title:e_persia.holder }"
		}
	}
}

# Make sure invader has troops
spawn_seljuk_rum_troops_effect = {
	spawn_seljuk_rum_army_effect = yes
	spawn_seljuk_rum_army_effect = yes
	spawn_seljuk_rum_army_effect = yes
	spawn_seljuk_rum_army_effect = yes
	if = {
		limit = { game_start_date < 1000.1.1 }
		spawn_seljuk_rum_army_effect = yes
		spawn_seljuk_rum_army_effect = yes
		spawn_seljuk_rum_army_effect = yes
	}
}
spawn_seljuk_rum_army_effect = {
	spawn_army = {
		name = seljuk_rum_event_troops
		location = primary_title.title_capital_county.title_province
		uses_supply = no
		inheritable = no
		
		levies = 250
		men_at_arms = {
			type = horse_archers
			stacks = 10
		}
		men_at_arms = {
			type = light_horsemen
			stacks = 6
		}
		men_at_arms = {
			type = light_footmen
			stacks = 3
		}
		men_at_arms = {
			type = armored_footmen
			stacks = 1
		}
		# siege
		men_at_arms = {
			type = mangonel
			stacks = 7
		}
	}
}

seljuk_form_rum_effect = {
	# block decision
	add_to_global_variable_list = {
		name = unavailable_unique_decisions
		target = flag:flag_formed_rum_sultanate
	}
	### de jure changes
	# rûm
	title:d_anatolia = { add_to_temporary_list = hi_form_k_rum }
	title:d_cappadocia = { add_to_temporary_list = hi_form_k_rum }
	title:d_charsianon = { add_to_temporary_list = hi_form_k_rum }
	title:d_sebasteia = { add_to_temporary_list = hi_form_k_rum }
	title:d_armeniac = { add_to_temporary_list = hi_form_k_rum }
	every_in_list = {
		list = hi_form_k_rum
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = title:k_rum
		}
	}
	title:k_rum = {
		#set_de_jure_liege_title = title:e_seljuk
		set_capital_county = title:c_charsianon
		set_title_name = hi_k_rum
	}
	# pontus
	title:d_chaldia = { set_de_jure_liege_title = title:k_trebizond }
	title:d_paphlagonia = { set_de_jure_liege_title = title:d_bucellaria.de_jure_liege }
	if = {
		limit = { exists = title:k_pontus.holder }
		# grant replacement kingdom
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		title:k_trebizond = {
			change_title_holder = {
				holder = title:k_pontus.holder
				change = scope:title_change
			}
			copy_title_history = title:k_pontus
		}
		resolve_title_and_vassal_change = scope:title_change
		# destroy pontus
		title:k_pontus.holder = {
			set_primary_title_to = title:k_trebizond
			destroy_title = title:k_pontus
		}
	}
	# Georgia
	#if = {
	#	limit = { title:k_georgia = { target_is_de_jure_liege_or_above = title:e_byzantium } }
	#	title:k_georgia = { set_de_jure_liege_title = title:k_caucasus.de_jure_liege }
	#}
	# Armenia
	#if = {
	#	limit = { title:k_armenia = { target_is_de_jure_liege_or_above = title:e_byzantium } }
	#	title:k_armenia = { set_de_jure_liege_title = title:k_jazira.de_jure_liege }
	#}

	# give out counties, if demesne too small
	if = {
		limit = { scope:first_rum_ruler = { domain_size = 1 } }
		set_local_variable = {
			name = seljuk_rum_max_start_counties_var
			value = 0
		}
		while = {
			limit = {
				local_var:seljuk_rum_max_start_counties_var < 3
			}
			random_county_in_region = {
				region = special_seljuk_rum_conquest_region_de_jure
				limit = {
					holder = { is_ai = yes }
				}
				county = { add_to_temporary_list = seljuk_rum_starting_provinces_list }
			}
			change_local_variable = {
				name = seljuk_rum_max_start_counties_var
				add = 1
			}
		}
	}
	# throw out e_seljuk out of anatolia (was useful when Rûm spawned as a vassal)
	every_county_in_region = {
		region = special_seljuk_conquest_region_7
		limit = {
			holder = title:e_seljuk.holder
		}
		county = { add_to_temporary_list = seljuk_rum_starting_provinces_list }
	}
	create_title_and_vassal_change = {
		type = usurped
		save_scope_as = title_change_one
		add_claim_on_loss = no
	}
	every_in_list = {
		list = seljuk_rum_starting_provinces_list
		change_title_holder = {
			holder = scope:first_rum_ruler
			change = scope:title_change_one
		}
	}
	resolve_title_and_vassal_change = scope:title_change_one

	# Create the title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change_two
		add_claim_on_loss = no
	}
	title:k_rum = {
		change_title_holder = {
			holder = scope:first_rum_ruler
			change = scope:title_change_two
		}
	}
	resolve_title_and_vassal_change = scope:title_change_two
	assert_if = {
		limit = { NOT = { exists = title:k_rum } }
		text = "k_rum was not created!"
	}
	scope:first_rum_ruler = { set_primary_title_to = title:k_rum }

	# # make vassal of e_seljuk, if a holder exists, then make independent
	# if = {
	# 	limit = { exists = title:e_seljuk.holder }
	# 	# push king under emperor to add vassals
	# 	title:k_rum.holder = {
	# 		create_title_and_vassal_change = {
	# 			type = swear_fealty
	# 			save_scope_as = title_change_three
	# 			add_claim_on_loss = no
	# 		}
	# 		change_liege = {
	# 			liege = title:e_seljuk.holder
	# 			change = scope:title_change_three
	# 		}
	# 		resolve_title_and_vassal_change = scope:title_change_three
	# 	}
	# 	# push dukes under Rûm
	# 	title:e_seljuk.holder = {
	# 		every_vassal = {
	# 			limit = {
	# 				OR = {
	# 					highest_held_title_tier = tier_duchy
	# 					highest_held_title_tier = tier_county
	# 				}
	# 				exists = capital_province
	# 				capital_province = {
	# 					geographical_region = special_seljuk_conquest_region_7
	# 				}
	# 			}
	# 			create_title_and_vassal_change = {
	# 				type = swear_fealty
	# 				save_scope_as = title_change_four
	# 				add_claim_on_loss = no
	# 			}
	# 			change_liege = {
	# 				liege = title:k_rum.holder
	# 				change = scope:title_change_four
	# 			}
	# 			resolve_title_and_vassal_change = scope:title_change_four
	# 		}
	# 	}
	# 	# make independent & add truce
	# 	title:k_rum.holder = {
	# 		create_title_and_vassal_change = {
	# 			type = independency
	# 			save_scope_as = title_change_five
	# 			add_claim_on_loss = no
	# 		}
	# 		becomes_independent = { change = scope:title_change_five }
	# 		resolve_title_and_vassal_change = scope:title_change_five

	# 		add_truce_both_ways = {
	# 			character = title:e_seljuk.holder
	# 			years = 5
	# 			name = TRUCE_GRANT_INDEPENDENCE
	# 		}
	# 	}
	# }

	### culture changes within rûm
	title:c_charsianon = {
		set_county_culture = scope:first_rum_ruler.culture
		set_county_faith = scope:first_rum_ruler.faith
	}
	title:k_rum.holder = {
		every_sub_realm_county = {
			limit = {
				tier = tier_county
				NOT = {
					culture = {
						OR = {
							has_cultural_pillar = heritage_turkic
							any_parent_culture_or_above = { has_cultural_pillar = heritage_turkic }
							has_cultural_pillar = language_turkic
							any_parent_culture_or_above = { has_cultural_pillar = language_turkic }
						}
					}
				}
				de_jure_liege = { de_jure_liege = title:k_rum }
			}
			random = {
				chance = 75
				set_county_culture = scope:first_rum_ruler.culture
			}
		}
	}

	# cultural acceptance - easier hybridization
	culture:turkish = {
		change_cultural_acceptance = {
			target = culture:greek
			value = medium_positive_culture_acceptance # miniscule = 5%, low = 10%, medium = 20%
			desc = cultural_acceptance_gain_event
		}
	}

	# spawn army for the byzantines
	if = {
		limit = { exists = title:e_byzantium.holder }
		title:e_byzantium.holder = {
			spawn_army = {
				name = event_troop_default_name
				location = capital_province
				uses_supply = no
				inheritable = yes
				
				levies = 500
				men_at_arms = {
					type = cataphract
					stacks = 6
				}
				men_at_arms = {
					type = pikemen_unit
					stacks = 9
				}
				men_at_arms = {
					type = light_horsemen
					stacks = 7
				}
			}
			spawn_army = {
				name = event_troop_default_name
				location = capital_province
				uses_supply = no
				inheritable = yes
				
				levies = 500
				men_at_arms = {
					type = cataphract
					stacks = 6
				}
				men_at_arms = {
					type = pikemen_unit
					stacks = 9
				}
				men_at_arms = {
					type = light_horsemen
					stacks = 7
				}
			}
		}
	}

	# notify players
	every_player = {
		limit = {
			NOR = {
				#this = title:e_seljuk.holder
				this = title:k_rum.holder
			}
		}
		trigger_event = {
			id = seljuk_invasion.1015
			days = 7
		}
	}
}